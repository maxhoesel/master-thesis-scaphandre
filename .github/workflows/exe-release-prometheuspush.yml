name: Build exe installer for windows for prometheus-push only version

on:
  push:
    paths-ignore:
      - 'docs_src/**'
      - 'README.md'
      - 'CITATION'
      - 'book.toml'
      - 'CONTRIBUTING.md'
    tags: [ 'v*.*.*', 'dev*.*.*' ]
    branches: [ '311-github-workflow-to-build-and-publish-a-exemsi-file-including-signed-rapl-driver-at-each-tagrelease' ]

jobs:
  build_exe_win1011:
    name: Build exe installer for windows 10/11/server 2016/server 2019/server 2022
    runs-on: "windows-2019"
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: Swatinem/rust-cache@v2
        with:
          # The prefix cache key, this can be changed to start a new cache manually.
          # default: "v0-rust"
          prefix-key: ""

          # A cache key that is used instead of the automatic `job`-based key,
          # and is stable over multiple jobs.
          # default: empty
          shared-key: ""

          # An additional cache key that is added alongside the automatic `job`-based
          # cache key and can be used to further differentiate jobs.
          # default: empty
          key: ""

          # A whitespace separated list of env-var *prefixes* who's value contributes
          # to the environment cache key.
          # The env-vars are matched by *prefix*, so the default `RUST` var will
          # match all of `RUSTC`, `RUSTUP_*`, `RUSTFLAGS`, `RUSTDOC_*`, etc.
          # default: "CARGO CC CFLAGS CXX CMAKE RUST"
          env-vars: ""

          # The cargo workspaces and target directory configuration.
          # These entries are separated by newlines and have the form
          # `$workspace -> $target`. The `$target` part is treated as a directory
          # relative to the `$workspace` and defaults to "target" if not explicitly given.
          # default: ". -> target"
          workspaces: ""

          # Additional non workspace directories to be cached, separated by newlines.
          cache-directories: ""

          # Determines whether workspace `target` directories are cached.
          # If `false`, only the cargo registry will be cached.
          # default: "true"
          cache-targets: ""

          # Determines if the cache should be saved even when the workflow has failed.
          # default: "false"
          cache-on-failure: ""

          # Determines which crates are cached.
          # If `true` all crates will be cached, otherwise only dependent crates will be cached.
          # Useful if additional crates are used for CI tooling.
          # default: "false"
          cache-all-crates: ""

          # Determiners whether the cache should be saved.
          # If `false`, the cache is only restored.
          # Useful for jobs where the matrix is additive e.g. additional Cargo features.
          # default: "true"
          save-if: ""
      - name: Install Innosoft
        run: |
          $url = "https://jrsoftware.org/download.php/is.exe"
          $dest = "is.exe"
          Invoke-WebRequest -Uri $url -OutFile $dest